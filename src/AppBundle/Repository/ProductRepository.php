<?php

namespace AppBundle\Repository;

/**
 * ProductRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */

use Doctrine\ORM\Tools\Pagination\Paginator;

class ProductRepository extends \Doctrine\ORM\EntityRepository
{
    public function getProductWithCategory(int $id)
    {
        $em = $this->getEntityManager();
        $query = $em->createQuery('SELECT a,c FROM AppBundle:Product a
                              JOIN a.category c
                              WHERE a.id = ' . $id);
        return $query->getOneOrNullResult();
    }

    public function getAllWithCategories()
    {
        $em = $this->getEntityManager();
        $query = $em->createQuery("SELECT a,c FROM AppBundle:Product a
                              JOIN a.category c
                              WHERE a.isActive = 1");
        return $query->getResult();
    }

    public function count(): int
    {
        $em = $this->getEntityManager();
        $query = $em->createQuery("SELECT COUNT(a.id) c 
                                        FROM AppBundle:Product a ");

        return intval($query->getOneOrNullResult()['c']);
    }

    public function findAllPerPage(int $limit = 0, int $offset = 0)
    {

        $em = $this->getEntityManager();
        $query = $em->createQuery("SELECT a,c FROM AppBundle:Product a
                              JOIN a.category c
                              WHERE a.isActive = 1");

        $query->setFirstResult($offset);
        $query->setMaxResults($limit);

        return $query->getResult();
    }

    public function findByCategoryPerPage(int $limit = 0, int $offset = 0, int $categoryId = -1)
    {
        $categoryFilter = '';

        $em = $this->getEntityManager();
        if ($categoryId > -1) {
            $categoryFilter = " AND c.id = $categoryId" ;
        }
        $query = $em->createQuery("SELECT a,c FROM AppBundle:Product a
                              JOIN a.category c
                              WHERE a.isActive = '1' " . $categoryFilter);

        $query->setFirstResult($offset);
        $query->setMaxResults($limit);
        return $query->getResult();
    }

}
